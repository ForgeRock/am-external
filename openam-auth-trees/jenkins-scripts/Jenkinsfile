/*
 * The contents of this file are subject to the terms of the Common Development and
 * Distribution License (the License). You may not use this file except in compliance with the
 * License.
 *
 * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the
 * specific language governing permission and limitations under the License.
 *
 * When distributing Covered Software, include this CDDL Header Notice in each file and include
 * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL
 * Header, with the fields enclosed by brackets [] replaced by your own identifying
 * information: "Portions copyright [year] [name of copyright owner]".
 *
 * Copyright 2018 ForgeRock AS.
 */
@Library('forgerock-pipeline-libs')
import java.lang.Object
import com.forgerock.pipeline.PullRequestBuild

def jobProperties = [[$class: 'BuildDiscarderProperty', strategy: [$class: 'LogRotator', numToKeepStr: '10']]]
jobProperties.add(pipelineTriggers([cron('@midnight')]))
properties(jobProperties)

/**********************************************************************************************************************
 *                    This pipeline run the auth-trees-stable tests against the latest AM nightly                     *
 *                    NOTE: this is a temporary pipeline and will be deleted once the auth trees tests                *
 *                    are back to being stable                                                                        *
 **********************************************************************************************************************/
timestamps {

    node('temper') {
        runAuthTreeTests()
    }
}


/**
 * Installs / unstashes the artifacts needed by temper
 */
def runAuthTreeTests() {
    def MAVEN_BASE_OPTIONS = '-V -B -e'
    def MAVEN_GOALS = 'verify'
    def MAVEN_JVM_OPTS = '-Xmx2g -Xms512m -Xss1m -XX:MaxPermSize=512m'
    def MAVEN_TEMPER_VERSION = '3.3.3'
    def MAVEN_TEMPER_PROFILES = '-P functional-tests'
    def MAVEN_TEMPER_OPTIONS = " -DAM_HOST=openam.localtest.me" +
            " -DAUDIT_LOG_SERVICE_ENABLED=false" +
            " -DAUTODEPLOY=local" +
            " -Dmaven.test.failure.ignore=true"
    stage('Install artifacts') {
        withEnv(["JAVA_HOME=" + tool("JDK8"),
                 "MAVEN_OPTS=${MAVEN_JVM_OPTS}",
                 "PATH+MAVEN=" + tool("Maven ${MAVEN_TEMPER_VERSION}") + "/bin"]
         ) {

            def OPENAM_WAR = 'OpenAM-*.war'
            def projectVersion = "6.0.0-SNAPSHOT"

            sh "git clone ssh://git@stash.forgerock.org:7999/openam/openam.git ."

            sh "mkdir -p openam-server/target && " +
                    "mvn dependency:copy ${MAVEN_BASE_OPTIONS} -Dartifact=org.forgerock.am:openam-server:${projectVersion}:war " +
                    "-Dmdep.useBaseVersion=true -DoutputDirectory=openam-server/target && " +
                    "mv openam-server/target/openam-server*.war openam-server/target/OpenAM-${projectVersion}.war"
            sh "mkdir -p openam-rest-sdk/openam-sdk/target && " +
                    "mvn dependency:copy ${MAVEN_BASE_OPTIONS} -Dartifact=org.forgerock.am:openam-sdk:${projectVersion} " +
                    "-DoutputDirectory=openam-rest-sdk/openam-sdk/target -Dmdep.useBaseVersion=true &&" +
                    " ls -l openam-rest-sdk/openam-sdk/target"
            sh "mkdir -p openam-server/target && " +
                    "mvn dependency:copy ${MAVEN_BASE_OPTIONS} -Dartifact=org.forgerock.am:openam-server:${projectVersion}:crestapi " +
                    "-Dmdep.useBaseVersion=true -DoutputDirectory=openam-server/target && " +
                    "mv openam-server/target/openam-server-${projectVersion}.crestapi openam-server/target/crestapi.json"
            sh "mkdir -p openam-amster/target/ && " +
                    "mvn dependency:copy ${MAVEN_BASE_OPTIONS} -Dartifact=org.forgerock.am:openam-amster:${projectVersion} " +
                    "-Dmdep.useBaseVersion=true -DoutputDirectory=openam-amster/target && " +
                    "mv openam-amster/target/openam-amster-${projectVersion}.jar openam-amster/target/amster-${projectVersion}.jar"


            sh "mvn install:install-file -Dfile=openam-rest-sdk/openam-sdk/target/openam-sdk-${projectVersion}.jar -DgroupId=org.forgerock.am -DartifactId=openam-sdk -Dversion=${projectVersion} -Dpackaging=jar"
            sh "mvn install:install-file -Dfile=openam-server/target/OpenAM-${projectVersion}.war -DgroupId=org.forgerock.am -DartifactId=openam-server -Dversion=${projectVersion} -Dpackaging=war"
            sh "mvn install:install-file -Dfile=openam-amster/target/amster-${projectVersion}.jar -DgroupId=org.forgerock.am -DartifactId=openam-amster -Dversion=${projectVersion} -Dpackaging=jar"
            sh "mvn install:install-file -Dfile=openam-server/target/crestapi.json -DgroupId=org.forgerock.am -DartifactId=openam-server -Dversion=${projectVersion} -Dpackaging=crestapi"

            def deployWar = sh(script: "echo \$PWD/\$(basename ${OPENAM_WAR})", returnStdout: true).trim()
            echo "Deploying ${deployWar}"

        }
    }

    stage('Run tests') {
        withEnv(["JAVA_HOME=" + tool("JDK8"),
                 "MAVEN_OPTS=${MAVEN_JVM_OPTS}",
                 "PATH+MAVEN=" + tool("Maven ${MAVEN_TEMPER_VERSION}") + "/bin"]
        ) {
            MAVEN_TEMPER_OPTIONS += " -Dfailsafe.groups=auth-trees-stable "
            sh "mvn ${MAVEN_BASE_OPTIONS} ${MAVEN_GOALS} ${MAVEN_TEMPER_OPTIONS} ${MAVEN_TEMPER_PROFILES} -f tests/pom.xml"
            sh "ls -l"
            sh "ls -l ${WORKSPACE}/tests/temper-functional-tests/openam-functional-tests/target/temper-report/"
            publishHTML(target: [
                    allowMissing         : false,
                    alwaysLinkToLastBuild: false,
                    keepAll              : true,
                    reportDir            : "${WORKSPACE}/tests/temper-functional-tests/openam-functional-tests/target/temper-report/",
                    reportFiles          : 'index.html',
                    reportName           : "auth trees tests stable"
            ])
        }
    }
}
