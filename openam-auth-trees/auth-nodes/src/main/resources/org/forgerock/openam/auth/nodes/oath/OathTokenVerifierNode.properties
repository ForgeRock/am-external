#
# The contents of this file are subject to the terms of the Common Development and
# Distribution License (the License). You may not use this file except in compliance with the
# License.
#
# You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the
# specific language governing permission and limitations under the License.
#
# When distributing Covered Software, include this CDDL Header Notice in each file and include
# the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL
# Header, with the fields enclosed by brackets [] replaced by your own identifying
# information: "Portions copyright [year] [name of copyright owner]".
#
# Copyright 2025 ForgeRock AS.
#
#
# Copyright 2020-2025 Ping Identity Corporation. All Rights Reserved
#
# This code is to be used exclusively in connection with Ping Identity
# Corporation software or services. Ping Identity Corporation only offers
# such software or services to legal entities who have entered into a
# binding license agreement with Ping Identity Corporation.
#

nodeDescription=OATH Token Verifier
nodeHelp=Collects and verify the One-Time Password code provided by the user.

successOutcome=Success
failureOutcome=Failure
notRegisteredOutcome=Not registered
recoveryCodeOutcome=Recovery Code

algorithm=OATH Algorithm
algorithm.hep=Choose the algorithm your device uses to generate the OTP. HOTP uses a counter value that is incremented \
  every time a new OTP is generated. TOTP generates a new OTP every few seconds as specified by the time step interval.
totpTimeInterval=TOTP Time Step Interval
totpTimeInterval.help=This is the time interval that one OTP is valid for. For example, if the time step \
  is 30 seconds, then a new OTP will be generated every 30 seconds. This makes a single OTP valid for only 30 seconds.
maximumAllowedClockDrift=TOTP Maximum Allowed Clock Drift
maximumAllowedClockDrift.help=Number of time steps a client is allowed to get out of sync with the server before manual \
  resynchronization is required. For example, with 3 allowed drifts and a time step interval of 30 seconds the server \
  will allow codes from up to 90 seconds from the current time to be treated as the current time step. The drift for \
  a user's device is calculated each time they enter a new code. If the drift exceeds this value, the user's \
  authentication code will be rejected.
totpTimeSteps=TOTP Time Steps
totpTimeSteps.help=This is the number of time step intervals to check the received OTP against both forward in time \
  and back in time. For example, with 1 time step and a time step interval of 30 seconds the server will allow a code \
  between the previous code, the current code and the next code.
totpHashAlgorithm=TOTP Hash Algorithm
totpHashAlgorithm.help=The Hmac hash algorithm to be used on generating the OTP codes.
hotpWindowSize=HOTP Window Size
hotpWindowSize.help=This sets the window that the OTP device and the server counter can be out of sync. For example, \
  if the window size is 100 and the servers last successful login was at counter value 2, then the server will accept \
  a OTP from the OTP device that is from device counter 3 to 102.
isRecoveryCodeAllowed=Allow recovery codes
isRecoveryCodeAllowed.help=Allow users to use one of the recovery codes to proceed with the login.

default.message=Enter verification code
default.submit=Submit
default.recoveryCodes=Use recovery code

passwordLength.SIX_DIGITS=6
passwordLength.EIGHT_DIGITS=8

totpHashAlgorithm.HMAC_SHA1=HMAC-SHA1
totpHashAlgorithm.HMAC_SHA256=HMAC-SHA256
totpHashAlgorithm.HMAC_SHA512=HMAC-SHA512
