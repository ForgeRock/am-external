#
# The contents of this file are subject to the terms of the Common Development and
# Distribution License (the License). You may not use this file except in compliance with the
# License.
#
# You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the
# specific language governing permission and limitations under the License.
#
# When distributing Covered Software, include this CDDL Header Notice in each file and include
# the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL
# Header, with the fields enclosed by brackets [] replaced by your own identifying
# information: "Portions copyright [year] [name of copyright owner]".
#
# Copyright 2025 ForgeRock AS.
#
#
# Copyright 2023-2025 Ping Identity Corporation. All Rights Reserved
#
# This code is to be used exclusively in connection with Ping Identity
# Corporation software or services. Ping Identity Corporation only offers
# such software or services to legal entities who have entered into a
# binding license agreement with Ping Identity Corporation.
#

nodeDescription=OIDC ID Token Validator
nodeHelp=Validates an OIDC provider's ID Token and transforms the attributes according to a configured script.

oidcValidationType=OpenID Connect Validation Type
oidcValidationType.help=In order to validate the ID token from the OpenID Connect provider, the node needs \
  either a URL to get the public keys for the provider, or the symmetric key for an ID token signed with a \
  HMAC-based algorithm. <p> By default, the configuration type is .well-known/openid-configuration_url. This means \
  the node should retrieve the keys based on information in the OpenID Connect Provider Configuration Document. <p>\
  You can instead configure the authentication node to validate the ID token signature with the client secret key \
  you provide, or to validate the ID token with the keys retrieved from the URL to the OpenID Connect provider's \
  JSON web key set.
oidcValidationType.WELL_KNOWN_URL=Well Known URL
oidcValidationType.JWK_URL=JWK URL
oidcValidationType.CLIENT_SECRET=Client Secret

oidcValidationValue=OpenID Connect Validation Value
oidcValidationValue.help=Depending on the value of the <code>OpenID Connect Validation Type</code> property, this \
  property holds the full URL to the discovery or JWK location. If <code>OpenID Connect Validation Type</code> is \
  set to <code>Client Secret</code>, AM ignores this property and uses the value of the <code>Client Secret</code>. \
  <p> Example: https://accounts.google.com/.well-known/openid-configuration

secretId=Client Secret Label
secretId.help=A secret label for mapping the OIDC Client Secret to a secret in the secret store. <br>\
  The label can only contain characters {{a-z}} {{A-Z}} {{0-9}} {{.}} \
  and cannot start or end with {{.}}.
  <p>For more information on the OAuth client_id parameter refer \
  to the RFC 6749 (http://tools.ietf.org/html/rfc6749#section-2.3.1), section 2.3.1.

headerName=ID Token Header Name
headerName.help=Name of header referencing the ID Token.

idTokenIssuer=Token Issuer
idTokenIssuer.help=Name of the OpenID Connect ID token issuer. Value must match the iss field in issued ID \
  Token e.g. <code>accounts.google.com</code>

audienceName=Audience name
audienceName.help=The audience name for this OpenID Connect node. This will be used to check that the \
  ID token received is intended for this node as an audience.

authorisedParties=Authorized parties
authorisedParties.help=A list of case-sensitive accepted authorized parties which can be either string or URI \
  values. This will be checked against the authorized party claim of the ID token.

script=Transformation Script
script.help=A script that can transform the ID token's claims into object data.

inputs=Script Inputs
inputs.help=A list of state inputs that can be used by the script.

unreasonableLifetimeLimit=Unreasonable Lifetime Limit
unreasonableLifetimeLimit.help=During token validation AM enforces that the token must expire within the specified \
  duration and if the "iat" claim value is present, the token must not be older than the specified duration. This \
  value should be in minutes.
